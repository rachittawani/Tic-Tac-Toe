{"version":3,"sources":["grid.module.css","svgs/Circle.js","svgs/Cross.js","Grid.js","PlayerInfo.js","Header.js","Footer.js","Clear.js","App.js","index.js"],"names":["module","exports","Circle","props","size","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","Cross","d","stroke-linecap","Grid","divisions","positions","map","value","index","svg","isWinningIndex","winningIndexes","includes","className","styles","winner","onClick","setPositions","container","PlayerInfo","win","player","turn","Header","header","section","Footer","footer","refreshPage","window","location","reload","Clear","clear","button","App","React","useState","name","undefined","indexes","Array","data","setdata","prevData","forEach","line","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68a03c6e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"grid_container__2ayOh\",\"winner\":\"grid_winner__3bkZz\",\"player\":\"grid_player__3tnOf\",\"win\":\"grid_win__1WrQg\",\"header\":\"grid_header__2iApk\",\"section\":\"grid_section__3g1QL\",\"footer\":\"grid_footer__25VAi\",\"clear\":\"grid_clear__2hP3B\",\"button\":\"grid_button__2Ztk9\"};","import React from 'react';\r\n\r\nexport default function Circle(props) {\r\n    const size = props.size || 100\r\n    \r\n    return(\r\n        <svg width={size} height={size} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"45\" stroke=\"black\" strokeWidth=\"10\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Cross(props) {\r\n    const size = props.size || 100\r\n\r\n    return(\r\n        <svg width={size} height={size} viewBox=\"0 0 110 110\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M5 5L105 105M105 5L5 105\" stroke=\"black\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './grid.module.css';\r\nimport Circle from './svgs/Circle';\r\nimport Cross from './svgs/Cross';\r\n\r\nconst renderSVG = svg => {\r\n    if(svg === 'Cross') {\r\n        return <Cross size = {60} />\r\n    }\r\n    else if(svg === 'Circle') {\r\n        return <Circle size = {60} />\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n\r\n}\r\nexport default function Grid(props) {\r\n    const divisions= props.positions.map((value,index) => {\r\n        const isWinningIndex = props.winningIndexes.includes(index)\r\n        return (\r\n            <div\r\n            className = {isWinningIndex ? styles.winner : null}\r\n                key = {index}\r\n                onClick = {()=> {\r\n                    props.setPositions(index)\r\n                }}\r\n            >\r\n                {renderSVG(value)}\r\n            </div>\r\n        )\r\n    })\r\n    return(\r\n        <div className= {styles.container}>\r\n            {divisions}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './grid.module.css'; \r\n\r\nexport default function PlayerInfo(props) {\r\n    const element = props.winner ? <h1 className = {styles.win}>Winner: {props.winner}</h1> : <h2 className = {styles.player}>Turn: {props.turn}</h2>\r\n    return element\r\n}","import React from 'react';\r\nimport styles from './grid.module.css'; \r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header className={styles.header}>\r\n                <h1><u>Tic-Tac-Toe</u></h1> \r\n            </header>\r\n            <div>\r\n                <p className= {styles.section}>This is a 2 person game.<br/>Hope you enjoy!!!</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport styles from './grid.module.css';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className = {styles.footer}>\r\n            <p><b><small>Copyright &copy; Rachit Tawani 2021</small></b></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport styles from './grid.module.css';\r\n\r\nfunction refreshPage() {\r\n    window.location.reload(false);\r\n}\r\nconst Clear = () => {\r\n    return (\r\n        <div className = {styles.clear}>\r\n            <button className = {styles.button} onClick={refreshPage}>Reset</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clear;\r\n","import React from 'react';\r\nimport Grid from './Grid';\r\nimport PlayerInfo from './PlayerInfo';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Clear from './Clear';\r\n\r\nexport default function App(props) {\r\n    var [data, setdata] = React.useState({\r\n        winner: {\r\n            name: undefined,\r\n            indexes: []\r\n        },\r\n        turn: 'Cross',\r\n        positions: new Array(9).fill(null)\r\n    })\r\n    return (\r\n        <>\r\n        <Header />\r\n        <Grid \r\n            winningIndexes = {data.winner.indexes}\r\n            positions = {data.positions} \r\n            setPositions = {index =>\r\n                setdata(prevData => {\r\n                    if(!prevData.positions[index] && !prevData.winner.name)\r\n                    {\r\n                        const data = {...prevData}\r\n                        data.positions[index] = data.turn\r\n                        const lines = [\r\n                            [0,1,2],\r\n                            [3,4,5],\r\n                            [6,7,8],\r\n                            [0,3,6],\r\n                            [1,4,7],\r\n                            [2,5,8],\r\n                            [0,4,8],\r\n                            [2,4,6]\r\n                        ]\r\n                        lines.forEach(line => {\r\n                            const [a,b,c] = line \r\n                            if(data.positions[a] &&\r\n                                data.positions[a] === data.positions[b]\r\n                                && data.positions[a] === data.positions[c])\r\n                                {\r\n                                    data.winner.name = data.turn\r\n                                    data.winner.indexes = line\r\n                                }\r\n                        })\r\n                        data.turn = (data.turn === 'Cross')\r\n                        ? 'Circle' : 'Cross'\r\n                        return data\r\n                    }  \r\n                    else{\r\n                        return prevData\r\n                    }\r\n                })    \r\n            }\r\n        />\r\n        <PlayerInfo turn = {data.turn} winner = {data.winner.name} />\r\n        <Clear />\r\n        <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'))"],"sourceRoot":""}